{
  "$schema": "https://raw.githubusercontent.com/georgemesseha/decova-gotcha-data/master/walkthroughs_schema.json",
  "CreatedOn": "2021-02-27 09:42:30",
  "Walkthroughs": [
    {
      "IsActive": true,
      "DisplayText": "Ops >> Find the process whose port",
      "Shortcut": "find-process-whose-port",
      "Steps": [
        {
          "IsActive": true,
          "RunOnlyIf": "",
          "Type": "Prompt",
          "VarName": "port",
          "DisplayText": "Port #",
          "Regex": "^[0-9]{2,}$",
          "Options": [],
          "Composer": "()=> 'netstat -ano | findstr :<port>'"
        },
        {
          "IsActive": true,
          "RunOnlyIf": "",
          "Type": "Command",
          "VarName": "",
          "DisplayText": "Will find the ID of the process using a specific port.",
          "Options": [],
          "Composer": "()=> `netstat -ano | findstr :<port>`"
        },
        {
          "IsActive": true,
          "RunOnlyIf": "",
          "Type": "Prompt",
          "VarName": "pid",
          "DisplayText": "Pick a PID from the above list",
          "Options": [],
          "Regex": "[0-9]+",
          "Composer": ""
        },
        {
          "IsActive": true,
          "RunOnlyIf": "",
          "Type": "Command",
          "VarName": "",
          "DisplayText": "Will display info about the process whose PID = <pid>",
          "Options": [],
          "Composer": "tasklist /svc /FI \"PID eq <pid>\""
        }
      ]
    },
    {
      "IsActive": true,
      "DisplayText": "Ops >> vscode >> install & build & patch++ & publish #increment#push",
      "Steps": [
        {
          "IsActive": true,
          "Type": "Command",
          "DisplayText": "Will install the missing packages & update the outdated ones.",
          "Composer": "npm install"
        },
        {
          "IsActive": true,
          "Type": "Command",
          "DisplayText": "Will compile TypeScript",
          "Composer": "tsc"
        },
        {
          "IsActive": true,
          "Type": "Command",
          "DisplayText": "Will increment the version's path no. of the current workspace's package.json",
          "Composer": "g patch++"
        },
        {
          "IsActive": true,
          "Type": "Command",
          "DisplayText": "Will publish the currently being developed package to npm repo.",
          "Composer": "npm publish"
        }
      ]
    },
    {
      "IsActive": true,
      "DisplayText": "Ops >> vscode >> Writing Extension >> Pack your extension",
      "Steps": [
        {
          "IsActive": true,
          "Type": "Command",
          "DisplayText": "Will compile TypeScript",
          "Composer": "tsc"
        },
        {
          "IsActive": true,
          "Type": "Command",
          "DisplayText": "Will increment the version's path no. of the current workspace's package.json",
          "Composer": "g patch++"
        },
        {
          "IsActive": true,
          "Type": "Command",
          "DisplayText": "Will package the extension locally as vsix",
          "Composer": "vsce package"
        }
      ]
    },
    {
      "IsActive": true,
      "DisplayText": "Dev >> npm >> List direct dependencies",
      "Steps": [
        {
          "IsActive": true,
          "DisplayText": "Will list the direct dependencies of the currently developed package.",
          "Type": "Command",
          "Composer": "npm list --depth=0"
        }
      ]
    },
    {
      "IsActive": true,
      "DisplayText": "Dev >> npm >> List globally installed packages",
      "Steps": [
        {
          "Type": "Command",
          "IsActive": true,
          "DisplayText": "Will list the globally installed packages.",
          "Composer": "npm list --global --depth=0"
        }
      ]
    },
    {
      "IsActive": true,
      "DisplayText": "Ops >> Docker >> Export image to tar file",
      "Steps": [
        {
          "Type": "Prompt",
          "VarName": "imageName",
          "IsActive": true,
          "DisplayText": "Image Name:",
          "Composer": ""
        },
        {
          "Type": "Prompt",
          "VarName": "outputFilePath",
          "IsActive": true,
          "DisplayText": "Output file path (without extension): ",
          "Composer": ""
        },
        {
          "Type": "Command",
          "IsActive": true,
          "DisplayText": "Will export image <imageName> to <outputFilePath>",
          "Composer": "docker image save <imageName> -o <outputFilePath>"
        }
      ]
    },
    {
      "IsActive": true,
      "DisplayText": "Dev >> npm >> Find unused and missing dependencies/packages",
      "Steps": [
        {
          "IsActive": true,
          "Type": "Command",
          "DisplayText": "Will find the unused and missing dependencies/packages",
          "Composer": "depcheck"
        }
      ]
    },
    {
      "IsActive": true,
      "DisplayText": "Poyka >> Open old poyka browsing mechanism",
      "Type": "Command",
      "Steps": [
        {
          "IsActive": true,
          "Type": "Command",
          "DisplayText": "g >> Old Poyka >> Open #legacy",
          "Composer": "g open-old-poyka"
        }
      ]
    },
    {
      "IsActive": true,
      "DisplayText": "Dev >> My Tools >> decova-gotcha",
      "Steps": [
        {
          "IsActive": true,
          "Type": "Command",
          "DisplayText": "Will open Gtch workspace for you to develop",
          "Composer": "code G:/_MyProjects/_MyNodeProjects/decova-gotcha"
        }
      ]
    },
    {
      "IsActive": true,
      "DisplayText": "Ops >> Node >> Workspace >> Increment patch and update dependent workspaces #patch++",
      "Shortcut": "patch++",
      "Steps": [
        {
          "IsActive": true,
          "Type": "Command",
          "DisplayText": "Will increment package's patch, then optionaly update dpenendent workspaces.",
          "Composer": "g patch++"
        }
      ]
    },
    {
      "IsActive": true,
      "DisplayText": "Dev >> Mine >> nodejs >> decova-gotcha #gtch#workspace",
      "Steps": [
        {
          "IsActive": true,
          "Type": "Command",
          "DisplayText": "Will open decova-gotcha workspace for you",
          "Composer": "start G:/_MyProjects/_MyNodeProjects/decova-gotcha"
        }
      ]
    },
    {
      "IsActive": true,
      "DisplayText": "Ops >> Gotcha >> Edit my code snippets #augment",
      "Steps": [
        {
          "IsActive": true,
          "Type": "Command",
          "DisplayText": "Will guide you to edit Walkthroughs",
          "Composer": "g edit-snippets"
        }
      ]
    },
    {
      "IsActive": true,
      "DisplayText": "Ops >> Gotcha >> Add a new LocalTool",
      "Steps": [
        {
          "IsActive": true,
          "Type": "Command",
          "DisplayText": "Will open decova-gotcha workspace in VSCode",
          "Composer": "code G:/_MyProjects/_MyNodeProjects/decova-gotcha"
        },
        {
          "IsActive": true,
          "Type": "Instruction",
          "DisplayText": "",
          "Composer": "Ctrl P / LTool_ to find where to put your new tool .ts file"
        },
        {
          "IsActive": true,
          "Type": "Instruction",
          "DisplayText": "",
          "Composer": "Create a new LTool_{TOOL_NAME}.ts file and implement ILocalTool"
        },
        {
          "IsActive": true,
          "Type": "Instruction",
          "DisplayText": "",
          "Composer": "Ctrl P / Dispatcher"
        },
        {
          "IsActive": true,
          "Type": "Instruction",
          "DisplayText": "",
          "Composer": "Ctrl P / App.ts"
        },
        {
          "IsActive": true,
          "Type": "Instruction",
          "DisplayText": "",
          "Composer": "Ctrl F / RegisterLocalTools"
        },
        {
          "IsActive": true,
          "Type": "Instruction",
          "DisplayText": "",
          "Composer": "Add new {TOOLNAME();}"
        },
        {
          "IsActive": true,
          "Type": "Instruction",
          "DisplayText": "",
          "Composer": "Now your tool is able to be launched by g {shortcut}"
        },
        {
          "IsActive": true,
          "Type": "Instruction",
          "DisplayText": "",
          "Composer": "Copy the return value of the impl. of GetShortcut()"
        },
        {
          "IsActive": true,
          "Type": "Instruction",
          "DisplayText": "",
          "Composer": "You will be led to update the Walkthroughs. Use the copied shortcut to add a new Walkthrough"
        },
        {
          "IsActive": true,
          "Type": "Command",
          "DisplayText": "",
          "Composer": "g edit-walkthroughs"
        }
      ]
    },
    {
      "DisplayText": "Dev >> Snippets >> Create a new code snippet",
      "IsActive": true,
      "Shortcut": "new-snippet",
      "Steps": [
        {
          "IsActive": true,
          "Type": "Instruction",
          "DisplayText": "",
          "Composer": "Select some code in VSCode"
        },
        {
          "IsActive": true,
          "Type": "Instruction",
          "DisplayText": "",
          "Composer": "Ctrl Shift P >> Convert to snippet"
        },
        {
          "IsActive": true,
          "Type": "Instruction",
          "DisplayText": "",
          "Composer": "Copy your snippet from the Output window"
        },
        {
          "IsActive": true,
          "Type": "Command",
          "DisplayText": "You will be led to edit your global snippets",
          "Composer": "g edit-snippets"
        }
      ]
    }
  ]
}